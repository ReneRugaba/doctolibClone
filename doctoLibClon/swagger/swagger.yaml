openapi: 3.0.0
info:
  title: 'Patient Management'
  description: 'Patient Management'
  version: V1
paths:
  /patients:
    get:
      tags:
        - patient
      summary: 'Find one Patient'
      description: 'Returns one Patient'
      operationId: searchPatient
      parameters:
        -
          name: nom
          in: query
          description: 'Status values that needed to be considered for filter'
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
            default: available
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDto'
        '500':
          description: 'Contact us, for this response'
        '404':
          description: 'Patients not found'
    post:
      tags:
        - patient
      summary: 'create Patient'
      description: 'create Patient'
      operationId: createPatient
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDto'
        '500':
          description: 'Contact us, for this response'
  '/patients/{id}':
    put:
      tags:
        - patient
      summary: 'update Patient'
      description: 'update Patient'
      operationId: updatePatient
      parameters:
        -
          name: id
          in: path
          description: 'id of patient to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDto'
        '500':
          description: 'Contact us, for this response'
        '404':
          description: 'Patients not found'
    delete:
      tags:
        - patient
      summary: 'delete Patient'
      description: 'delete Patient'
      operationId: removePatient
      parameters:
        -
          name: id
          in: path
          description: 'id of patient to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDto'
        '500':
          description: 'Contact us, for this response'
  /patients/consultations:
    post:
      tags:
        - patient
      summary: 'add meeting Patient'
      description: 'add meeting Patient'
      operationId: addRdv
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationDto'
        '500':
          description: 'Contact us, for this response'
        '404':
          description: 'Patients not found'
  '/patients/consultations/{id}':
    delete:
      tags:
        - patient
      summary: 'delete Patient consultation'
      description: 'delete Patient consultation'
      operationId: deleteRdv
      parameters:
        -
          name: id
          in: path
          description: 'id of consultation to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationDto'
        '500':
          description: 'Contact us, for this response'
  '/patients/{id}/consultations':
    delete:
      tags:
        - patient
      summary: 'read Patient consultation'
      description: 'read Patient consultation'
      operationId: readRdv
      parameters:
        -
          name: id
          in: path
          description: 'id of patient to return'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationDto'
        '500':
          description: 'Contact us, for this response'
        '404':
          description: 'Patients not found'
components:
  schemas:
    ConsultationDto:
      properties:
        id:
          type: integer
        dateRdv:
          type: string
        patient:
          type: integer
        practicien:
          type: integer
      type: object
    PatientDto:
      properties:
        id:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        dateNaissance:
          type: string
        email:
          type: string
        adresse:
          type: integer
      type: object
